// Paquete donde se encuentra el fragmentopackage com.example.taller2.fragments// Importación de clases necesariasimport android.content.Contextimport android.os.Bundleimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.widget.Buttonimport android.widget.TextViewimport androidx.fragment.app.Fragmentimport com.example.taller2.Rimport com.example.taller2.activities.MainActivityimport com.example.taller2.fragments.LoginFragment// Fragmento que muestra la información del perfil del usuario logueadoclass PerfilFragment : Fragment() {    override fun onCreateView(        inflater: LayoutInflater, container: ViewGroup?,        savedInstanceState: Bundle?    ): View? {        // Devuelve la vista definida en fragment_perfil.xml        return inflater.inflate(R.layout.fragment_perfil, container, false)    }    // Se ejecuta después de que la vista ha sido creada    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {        super.onViewCreated(view, savedInstanceState)        // Referencias a los elementos de la interfaz        val tvNombreApellido = view.findViewById<TextView>(R.id.nombre_apellido)        val tvCorreo = view.findViewById<TextView>(R.id.email)        val tvNumero = view.findViewById<TextView>(R.id.numerocel)        val btnEditarPerfil = view.findViewById<Button>(R.id.editarperfil)        // Se obtiene el correo electrónico del usuario actualmente logueado        val correoActivo = obtenerCorreoSesion()        // Si existe un correo activo, se recuperan los datos guardados en SharedPreferences        if (correoActivo != null) {            val sharedPreferences = requireContext().getSharedPreferences(                "Usuarios", // Nombre del archivo de preferencias donde se guardan los usuarios                Context.MODE_PRIVATE            )            // Recupera los valores asociados al usuario            val nombre = sharedPreferences.getString("$correoActivo-nombre", "No disponible")!!            val apellido = sharedPreferences.getString("$correoActivo-apellido", "No disponible")!!            val numero = sharedPreferences.getString("$correoActivo-numero", "No disponible")!!            // Muestra la información en la interfaz            tvNombreApellido.text = "$nombre $apellido"            tvCorreo.text = correoActivo            tvNumero.text = numero        }        // Acción del botón para editar perfil: llama al método de la actividad principal        btnEditarPerfil.setOnClickListener { v: View? ->            (requireActivity() as MainActivity).abrirEditarFragment()        }        val btnCerrarSesion = view.findViewById<Button>(R.id.cerrar_sesion)        btnCerrarSesion.setOnClickListener {            // Borrar sesión            val sharedPreferences = requireContext().getSharedPreferences("Sesion", Context.MODE_PRIVATE)            sharedPreferences.edit().clear().apply()            // Redirigir a LoginFragment            (requireActivity() as MainActivity).abrirFragmento(LoginFragment())        }    }    // Método que obtiene el correo del usuario logueado desde SharedPreferences    private fun obtenerCorreoSesion(): String? {        val sharedPreferences = requireContext().getSharedPreferences(            "Sesion", // Archivo de preferencias que guarda la sesión actual            Context.MODE_PRIVATE        )        return sharedPreferences.getString("correo_activo", null)    }}